SQL> SPOOL pf_schema_output.txt
SQL> 
SQL> 
SQL> DROP TABLE clinic CASCADE CONSTRAINTS;

Table CLINIC dropped.

SQL> 
SQL> DROP TABLE drug CASCADE CONSTRAINTS;

Table DRUG dropped.

SQL> 
SQL> DROP TABLE owner CASCADE CONSTRAINTS;

Table OWNER dropped.

SQL> 
SQL> DROP TABLE participant CASCADE CONSTRAINTS;

Table PARTICIPANT dropped.

SQL> 
SQL> DROP TABLE pet CASCADE CONSTRAINTS;

Table PET dropped.

SQL> 
SQL> DROP TABLE pet_type CASCADE CONSTRAINTS;

Error starting at line : 25 in command -
DROP TABLE pet_type CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE prescribe CASCADE CONSTRAINTS;

Table PRESCRIBE dropped.

SQL> 
SQL> DROP TABLE service CASCADE CONSTRAINTS;

Table SERVICE dropped.

SQL> 
SQL> DROP TABLE service_acc CASCADE CONSTRAINTS;

Table SERVICE_ACC dropped.

SQL> 
SQL> DROP TABLE specialisation CASCADE CONSTRAINTS;

Table SPECIALISATION dropped.

SQL> 
SQL> DROP TABLE training CASCADE CONSTRAINTS;

Table TRAINING dropped.

SQL> 
SQL> DROP TABLE vet CASCADE CONSTRAINTS;

Table VET dropped.

SQL> 
SQL> DROP TABLE visit CASCADE CONSTRAINTS;

Table VISIT dropped.

SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE clinic (
  2      clinic_id      NUMBER(7) NOT NULL,
  3      clinic_name    VARCHAR2(25) NOT NULL,
  4      clinic_address VARCHAR2(50) NOT NULL,
  5      clinic_pho_num CHAR(10) NOT NULL,
  6      vet_id         NUMBER(7) NOT NULL
  7  );

Table CLINIC created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_id IS
  2      'identification number of clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_name IS
  2      'name of clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_address IS
  2      'address of clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_pho_num IS
  2      'phone number of clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.vet_id IS
  2      'identification number of vet';

Comment created.

SQL> 
SQL> CREATE UNIQUE INDEX clinic__idx ON
  2      clinic (
  3          vet_id
  4      ASC );

INDEX CLINIC__IDX created.

SQL> 
SQL> ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

Table CLINIC altered.

SQL> 
SQL> CREATE TABLE drug (
  2      drug_id             NUMBER(7) NOT NULL,
  3      drug_name           VARCHAR2(25) NOT NULL,
  4      drug_usage          VARCHAR2(50) NOT NULL,
  5      drug_standard_price NUMBER(5, 2) NOT NULL
  6  );

Table DRUG created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_id IS
  2      'Identification number for Drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_name IS
  2      'Name of the Drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_usage IS
  2      'Usage instruction of the drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_standard_price IS
  2      'Fee charged for total qty of drugs. ';

Comment created.

SQL> 
SQL> ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

Table DRUG altered.

SQL> 
SQL> CREATE TABLE owner (
  2      owner_id       NUMBER(7) NOT NULL,
  3      owner_givname  VARCHAR2(25),
  4      owner_famname  VARCHAR2(25),
  5      owner_cont_num CHAR(10) NOT NULL
  6  );

Table OWNER created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_id IS
  2      'identification number for owner';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_givname IS
  2      'owner''s given name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_famname IS
  2      'owner''s family name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_cont_num IS
  2      'owner''s contact number';

Comment created.

SQL> 
SQL> ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

Table OWNER altered.

SQL> 
SQL> CREATE TABLE participant (
  2      partici_vet_id       NUMBER(7) NOT NULL,
  3      train_id             NUMBER(7) NOT NULL,
  4      partici_train_complt VARCHAR2(1) NOT NULL,
  5      partici_train_expiry DATE
  6  );

Table PARTICIPANT created.

SQL> 
SQL> ALTER TABLE participant
  2      ADD CONSTRAINT chk_training_completion CHECK ( partici_train_complt IN ( 'N', 'Y'
  3      ) );

Table PARTICIPANT altered.

SQL> 
SQL> COMMENT ON COLUMN participant.partici_vet_id IS
  2      'the id of vet who accepts training ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN participant.train_id IS
  2      'identifier for traning ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN participant.partici_train_complt IS
  2      'completion of training (Y for completed, N for incompleted)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN participant.partici_train_expiry IS
  2      'expiry date for training';

Comment created.

SQL> 
SQL> ALTER TABLE participant ADD CONSTRAINT panticipant_pk PRIMARY KEY ( train_id,
  2                                                                      partici_vet_id );

Table PARTICIPANT altered.

SQL> 
SQL> CREATE TABLE pet (
  2      pet_id          NUMBER(7) NOT NULL,
  3      pet_name        VARCHAR2(15),
  4      pet_year_born   CHAR(4) NOT NULL,
  5      pet_life_status CHAR(1) NOT NULL,
  6      pet_type_id     NUMBER(7) NOT NULL,
  7      owner_id        NUMBER(7) NOT NULL
  8  );

Table PET created.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CONSTRAINT chk_animal_life_status CHECK ( pet_life_status IN ( 'A', 'D' ) );

Table PET altered.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_id IS
  2      'identifier of pet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_name IS
  2      'animal''s name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_year_born IS
  2      'the year animal borned';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_life_status IS
  2      'Idetifier to check if the animal is Alive or Dead (A/D)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_type_id IS
  2      'identification of animal type';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.owner_id IS
  2      'identification number for owner';

Comment created.

SQL> 
SQL> ALTER TABLE pet ADD CONSTRAINT pet_pk PRIMARY KEY ( pet_id );

Table PET altered.

SQL> 
SQL> CREATE TABLE pet_type (
  2      pet_type_id NUMBER(7) NOT NULL,
  3      pet_type    VARCHAR2(20) NOT NULL
  4  );

Table PET_TYPE created.

SQL> 
SQL> COMMENT ON COLUMN pet_type.pet_type_id IS
  2      'identification of animal type';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet_type.pet_type IS
  2      'animal type';

Comment created.

SQL> 
SQL> ALTER TABLE pet_type ADD CONSTRAINT animal_type_pk PRIMARY KEY ( pet_type_id );

Error starting at line : 186 in command -
ALTER TABLE pet_type ADD CONSTRAINT animal_type_pk PRIMARY KEY ( pet_type_id )
Error report -
ORA-02264: name already used by an existing constraint
02264. 00000 -  "name already used by an existing constraint"
*Cause:    The specified constraint name has to be unique.
*Action:   Specify a unique constraint name for the constraint.
SQL> 
SQL> CREATE TABLE prescribe (
  2      pres_no               NUMBER(7) NOT NULL,
  3      visit_date_time       DATE NOT NULL,
  4      vet_id                NUMBER(7) NOT NULL,
  5      drug_id               NUMBER(7) NOT NULL,
  6      pres_drug_dose        VARCHAR2(10) NOT NULL,
  7      pres_drug_frequency   VARCHAR2(15) NOT NULL,
  8      pres_drug_qtysupplied NUMBER(3) NOT NULL,
  9      pres_drug_linecost    NUMBER(5, 3) NOT NULL
 10  );

Table PRESCRIBE created.

SQL> 
SQL> COMMENT ON COLUMN prescribe.pres_no IS
  2      'Identifier for prescription with respect to surrogate key.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescribe.visit_date_time IS
  2      'date and time of the visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescribe.vet_id IS
  2      'identification number of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescribe.drug_id IS
  2      'Identification number for Drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescribe.pres_drug_dose IS
  2      'the dose of drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescribe.pres_drug_frequency IS
  2      'the frequency of drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescribe.pres_drug_qtysupplied IS
  2      'the quantity supplied of drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescribe.pres_drug_linecost IS
  2      'the line cost of drug';

Comment created.

SQL> 
SQL> ALTER TABLE prescribe ADD CONSTRAINT prescribe_pk PRIMARY KEY ( pres_no );

Table PRESCRIBE altered.

SQL> 
SQL> ALTER TABLE prescribe
  2      ADD CONSTRAINT prescribe_nk UNIQUE ( visit_date_time,
  3                                           vet_id,
  4                                           drug_id );

Table PRESCRIBE altered.

SQL> 
SQL> CREATE TABLE service (
  2      service_code           NUMBER(7) NOT NULL,
  3      service_desc           VARCHAR2(80) NOT NULL,
  4      service_standard_price NUMBER(5, 2) NOT NULL
  5  );

Table SERVICE created.

SQL> 
SQL> COMMENT ON COLUMN service.service_code IS
  2      'identifier for service';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service.service_desc IS
  2      'the description of service';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service.service_standard_price IS
  2      'Fee charged for provided service.';

Comment created.

SQL> 
SQL> ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( service_code );

Table SERVICE altered.

SQL> 
SQL> CREATE TABLE service_acc (
  2      service_acc_id       NUMBER(7) NOT NULL,
  3      visit_date_time      DATE NOT NULL,
  4      vet_id               NUMBER(7) NOT NULL,
  5      service_code         NUMBER(7) NOT NULL,
  6      service_acc_linecost NUMBER(5, 2) NOT NULL
  7  );

Table SERVICE_ACC created.

SQL> 
SQL> COMMENT ON COLUMN service_acc.service_acc_id IS
  2      'the surrogate key for service_acc';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service_acc.visit_date_time IS
  2      'date and time of the visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service_acc.vet_id IS
  2      'identification number of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service_acc.service_code IS
  2      'identifier for service';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service_acc.service_acc_linecost IS
  2      'the line cost for service';

Comment created.

SQL> 
SQL> ALTER TABLE service_acc ADD CONSTRAINT service_acc_pk PRIMARY KEY ( service_acc_id );

Table SERVICE_ACC altered.

SQL> 
SQL> ALTER TABLE service_acc
  2      ADD CONSTRAINT service_acc_nk UNIQUE ( visit_date_time,
  3                                             service_code,
  4                                             vet_id );

Table SERVICE_ACC altered.

SQL> 
SQL> CREATE TABLE specialisation (
  2      spec_id   NUMBER(7) NOT NULL,
  3      spec_name VARCHAR2(50) NOT NULL
  4  );

Table SPECIALISATION created.

SQL> 
SQL> COMMENT ON COLUMN specialisation.spec_id IS
  2      'identifier for vet specialisation ID ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN specialisation.spec_name IS
  2      'Newly discovered  specialisation of the vet';

Comment created.

SQL> 
SQL> ALTER TABLE specialisation ADD CONSTRAINT vet_specialisation_pk PRIMARY KEY ( spec_id
  2  );

Table SPECIALISATION altered.

SQL> 
SQL> CREATE TABLE training (
  2      train_id        NUMBER(7) NOT NULL,
  3      train_date_time DATE NOT NULL,
  4      vet_id          NUMBER(7) NOT NULL,
  5      train_name      VARCHAR2(25) NOT NULL,
  6      train_duration  VARCHAR2(10) NOT NULL,
  7      clinic_id       NUMBER(7) NOT NULL
  8  );

Table TRAINING created.

SQL> 
SQL> COMMENT ON COLUMN training.train_id IS
  2      'identifier for traning ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training.train_date_time IS
  2      'Date and time of traning. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training.vet_id IS
  2      'identification number of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training.train_name IS
  2      'Name of the trainig conducted';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training.train_duration IS
  2      'Duration of the training conducted';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training.clinic_id IS
  2      'identification number of clinic';

Comment created.

SQL> 
SQL> ALTER TABLE training ADD CONSTRAINT training_pk PRIMARY KEY ( train_id );

Table TRAINING altered.

SQL> 
SQL> ALTER TABLE training ADD CONSTRAINT training_fk UNIQUE ( vet_id,
  2                                                           train_date_time );

Table TRAINING altered.

SQL> 
SQL> CREATE TABLE vet (
  2      vet_id            NUMBER(7) NOT NULL,
  3      vet_givname       VARCHAR2(25),
  4      vet_famname       VARCHAR2(25),
  5      vet_cont_num      CHAR(10) NOT NULL,
  6      vet_employed_date DATE NOT NULL,
  7      clinic_id         NUMBER(7) NOT NULL,
  8      spec_id           NUMBER(7)
  9  );

Table VET created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_id IS
  2      'identification number of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_givname IS
  2      'vet''s given name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_famname IS
  2      'vet''s family name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_cont_num IS
  2      'contact number of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_employed_date IS
  2      'employed date of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.clinic_id IS
  2      'identification number of clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.spec_id IS
  2      'identifier for vet specialisation ID ';

Comment created.

SQL> 
SQL> ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

Table VET altered.

SQL> 
SQL> CREATE TABLE visit (
  2      visit_date_time     DATE NOT NULL,
  3      vet_id              NUMBER(7) NOT NULL,
  4      visit_length        VARCHAR2(25) NOT NULL,
  5      visit_pet_note      VARCHAR2(100),
  6      visit_pet_weight    NUMBER(3, 1) NOT NULL,
  7      visit_total_cost    NUMBER(5, 2) NOT NULL,
  8      visit_paidby        CHAR(4) NOT NULL,
  9      pet_id              NUMBER(7) NOT NULL,
 10      clinic_id           NUMBER(7) NOT NULL,
 11      follow_up_date_time DATE,
 12      follow_up_vet_id    NUMBER(7)
 13  );

Table VISIT created.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT chk_visit_paidby CHECK ( visit_paidby IN ( 'CASH', 'EFT' ) );

Table VISIT altered.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_date_time IS
  2      'date and time of the visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.vet_id IS
  2      'identification number of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_length IS
  2      'length of the visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_pet_note IS
  2      'the note for one pet in a visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_pet_weight IS
  2      'weight of the pet in the visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_total_cost IS
  2      'total cost of visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_paidby IS
  2      'paymethod of the visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.pet_id IS
  2      'identifier of pet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.clinic_id IS
  2      'identification number of clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.follow_up_date_time IS
  2      'date and time of the visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.follow_up_vet_id IS
  2      'identification number of vet';

Comment created.

SQL> 
SQL> ALTER TABLE visit ADD CONSTRAINT visit_pk PRIMARY KEY ( visit_date_time,
  2                                                          vet_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CONSTRAINT animaltype_pet FOREIGN KEY ( pet_type_id )
  3          REFERENCES pet_type ( pet_type_id );

Error starting at line : 409 in command -
ALTER TABLE pet
    ADD CONSTRAINT animaltype_pet FOREIGN KEY ( pet_type_id )
        REFERENCES pet_type ( pet_type_id )
Error report -
ORA-02270: no matching unique or primary key for this column-list
02270. 00000 -  "no matching unique or primary key for this column-list"
*Cause:    A REFERENCES clause in a CREATE/ALTER TABLE statement
           gives a column-list for which there is no matching unique or primary
           key constraint in the referenced table.
*Action:   Find the correct column names using the ALL_CONS_COLUMNS
           catalog view
SQL> 
SQL> ALTER TABLE vet
  2      ADD CONSTRAINT clinic_belng_vet FOREIGN KEY ( clinic_id )
  3          REFERENCES clinic ( clinic_id );

Table VET altered.

SQL> 
SQL> ALTER TABLE training
  2      ADD CONSTRAINT clinic_training FOREIGN KEY ( clinic_id )
  3          REFERENCES clinic ( clinic_id );

Table TRAINING altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT clinic_visit FOREIGN KEY ( clinic_id )
  3          REFERENCES clinic ( clinic_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE prescribe
  2      ADD CONSTRAINT drug_prescribe FOREIGN KEY ( drug_id )
  3          REFERENCES drug ( drug_id );

Table PRESCRIBE altered.

SQL> 
SQL> ALTER TABLE clinic
  2      ADD CONSTRAINT headvet_clinic FOREIGN KEY ( vet_id )
  3          REFERENCES vet ( vet_id );

Table CLINIC altered.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CONSTRAINT owner_pet FOREIGN KEY ( owner_id )
  3          REFERENCES owner ( owner_id );

Table PET altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT pet_visit FOREIGN KEY ( pet_id )
  3          REFERENCES pet ( pet_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE service_acc
  2      ADD CONSTRAINT service_service_acc FOREIGN KEY ( service_code )
  3          REFERENCES service ( service_code );

Table SERVICE_ACC altered.

SQL> 
SQL> ALTER TABLE participant
  2      ADD CONSTRAINT training_panticipant FOREIGN KEY ( train_id )
  3          REFERENCES training ( train_id );

Table PARTICIPANT altered.

SQL> 
SQL> ALTER TABLE vet
  2      ADD CONSTRAINT vet_specialisation FOREIGN KEY ( spec_id )
  3          REFERENCES specialisation ( spec_id );

Table VET altered.

SQL> 
SQL> ALTER TABLE training
  2      ADD CONSTRAINT vet_training FOREIGN KEY ( vet_id )
  3          REFERENCES vet ( vet_id );

Table TRAINING altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT vet_visit FOREIGN KEY ( vet_id )
  3          REFERENCES vet ( vet_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT visit_followup FOREIGN KEY ( follow_up_date_time,
  3                                                  follow_up_vet_id )
  4          REFERENCES visit ( visit_date_time,
  5                             vet_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE prescribe
  2      ADD CONSTRAINT visit_prescribe FOREIGN KEY ( visit_date_time,
  3                                                   vet_id )
  4          REFERENCES visit ( visit_date_time,
  5                             vet_id );

Table PRESCRIBE altered.

SQL> 
SQL> ALTER TABLE service_acc
  2      ADD CONSTRAINT visit_service_acc FOREIGN KEY ( visit_date_time,
  3                                                     vet_id )
  4          REFERENCES visit ( visit_date_time,
  5                             vet_id );

Table SERVICE_ACC altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            13
SQL> -- CREATE INDEX                             1
SQL> -- ALTER TABLE                             35
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- TSDP POLICY                              0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> SPOOL off
SQL> set echo off
